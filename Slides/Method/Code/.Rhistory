library(tidyverse)
library(AER)
data("CPS1985")
reg = lm(log(wage) ~ gender*married + education + experience + I(experience^2),data = CPS1985)
summary(reg)
R    = 999;                      # number of bootstraps
nind = nrow(CPS1985);            # number of individuals
nvar = length(reg$coefficients)  # number of variables
outs = mat.or.vec(R,nvar)
set.seed(123)
nind
samp     = sample(1:nind,nind,rep=TRUE)
samp
1:nind[-samp]
nn = 1:nind
setdiff(nn,samp)
R    = 999;                      # number of bootstraps
nind = nrow(CPS1985);            # number of individuals
nvar = length(reg$coefficients)  # number of variables
outs = mat.or.vec(R,nvar)
set.seed(123)
for (i in 1:R)
{
samp     = sample(1:nind,nind,rep=TRUE)
dat_samp = CPS1985[samp,]
reg1     = lm(log(wage) ~ gender*married + education + experience + I(experience^2),data = dat_samp)
outs[i,] = reg1$coefficients
}
outs[1:10,1:5]
mean_est = apply(outs,2,mean)
sd_est   = apply(outs,2,sd)
est = cbind(summary(reg)$coefficients[,1],
summary(reg)$coefficients[,2],
mean_est,
sd_est)
colnames(est) = c("CF: est","CF: sd","BT: est","BT: sd")
est
fn = function(x)
{
out = x*x + 5*x
return(out)
}
dfn = function(x)
{
out = 2*x+5
return(out)
}
num_gradient = function(x)
{
h   = 0.00001
ef1 =  fn(x+h)
ef0 =  fn(x-h)
dfn = (ef1-ef0)/(2*h)
return(dfn)
}
xval = 2:10
fn(xval)
dfn(xval)
num_gradient(xval)
